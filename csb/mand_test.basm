ORG 4E0
; поле для временных вычислений
; и фиксации результата выполнения команды
SCRATCH: WORD ?
; статус прохождения тестов
SHOULD_WRITE_TO_MEM_PASSED: WORD 0000
SHOULD_NOT_SET_ARITHM_FLAGS_PASSED: WORD 0000
ALL_PASSED: WORD 0000

ORG 4E6
BEGIN:
  JSR SHOULD_WRITE_TO_MEM
  JSR SHOULD_NOT_SET_ARITHM_FLAGS
  CLA
  INC
  AND SHOULD_WRITE_TO_MEM_PASSED
  AND SHOULD_NOT_SET_ARITHM_FLAGS_PASSED
  MOV ALL_PASSED
  HLT

SHOULD_WRITE_TO_MEM: WORD 0000
  ; инициализация теста
  CLA
  ADD TEST1_OP
  MOV SCRATCH
  ; NAND операнда с маской
  CLA
  ADD TEST1_MASK
  JSR MAND_SCRATCH
  ; проверка соответствия результата NAND ожиданию
  CLA
  ADD SCRATCH
  SUB TEST1_MASK ; TEST_OP & TEST_MASK = TEST_MASK
  BEQ TEST1_PASS
  BR TEST1_FAIL
  TEST1_PASS:
    INC
    BR TEST1_FINISH
  TEST1_FAIL:
    CLA
  TEST1_FINISH:
    MOV SHOULD_WRITE_TO_MEM_PASSED
    BR (SHOULD_WRITE_TO_MEM)
  TEST1_OP: WORD FFFF
  TEST1_MASK: WORD 1234

SHOULD_NOT_SET_ARITHM_FLAGS: WORD 0000
  ; инициализация теста
  CLA
  ADD TEST2_OP
  CLA
  ; NAND операнда с маской, при этом бит C
  ; устанавливается в 1 до выполнения операции
  ; для проверки на его перезапись.
  ADD TEST2_MASK
  CMC
  JSR MAND_SCRATCH
  ; проверка C = 1
  CMC
  BCS TEST2_FAIL
  ; проверка N = 1 (TEST2_MASK - отриц. число)
  BPL TEST2_FAIL
  ; проверка Z = 0 (TEST2_OP & TEST2_MASK = 0, TEST2_MASK /= 0)
  BEQ TEST2_FAIL
  TEST2_PASS:
    CLA
    INC
    BR TEST2_FINISH
  TEST2_FAIL:
    CLA
  TEST2_FINISH:
    MOV SHOULD_NOT_SET_ARITHM_FLAGS_PASSED
    BR (SHOULD_NOT_SET_ARITHM_FLAGS)
  TEST2_OP: WORD 7001
  TEST2_MASK: WORD 8000
  
MAND_SCRATCH: WORD 0000
  WORD 74E0
  BR (MAND_SCRATCH)

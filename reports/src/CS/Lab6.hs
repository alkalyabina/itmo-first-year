module CS.Lab6 where

import ReportBase

writeReport :: IO ()
writeReport = renderFile "./renders/CS-Lab6.tex" (execLaTeXM reportTeX)

reportTeX :: LaTeXM ()
reportTeX = do
  baseHeader
  raw "\\input{../src/CS/Lab6Head.latex}"
  document $ do
    baseTitlePage ("ЛАБОРАТОРНАЯ РАБОТА №6", "Основы вычислительной техники", Just "Вариант 663", "2017 г.")
    sectionstar "Цель работы"
    "Изучение организации процесса прерывания программы и исследования порядка функционирования ЭВМ при обмене данными в режиме прерывания программы."
    sectionstar "Задание"
    enumerate $ do
      item Nothing <> raw "Основная программа должна уменьшать на 3 содержимое $X$ (ячейки памяти с адресом $006_{16}$) в цикле."
      item Nothing <> raw "Обработчик прерывания должен по нажатию кнопки готовности ВУ-3 осуществлять вывод результата вычисления функции $F(X)=6X-3$ на данное ВУ, a по нажатию кнопки готовности ВУ-2 выполнить операцию побитового 'И' содержимого РД данного ВУ и Х."
      item Nothing <> raw "Если $X$ оказывается вне ОДЗ при выполнении любой операции по его изменению, то необходимо в $X$ записать максимальное по ОДЗ число."
    sectionstar "Область допустимых значений"
    raw "Область допустимых значений $Х$ ограничена функцией $F(X)=6X-3$ и 8-битным представлением в регистре данных ВУ." <> lnbk <> parbreak
    raw "Максимальным значением $F(X)$ является $127_{10}$, минимальным -- $-128_{10}$. Тогда $X$ может принимать значения от $21_{10}$ до $-20_{10}$, т.е. от $15_{16}$ до $EC_{16}$."
    sectionstar "Листинг программы"
    raw "\\input{../src/CS/Lab6Listing.latex}"
    newpage
    sectionstar "Методика проверки программного комплекса"
    vspace (Mm 4) <> textbf "Проверка обработки прерываний:" <> lnbk
    enumerate $ do
      item Nothing <> raw "Загрузить комплекс программ в память базовой ЭВМ."
      item Nothing <> raw "Изменить значения точек останова по адресам 001 и 30F на HLT"
      item Nothing <> raw "Запустить основную программу в автоматическом режиме с адреса 100"
      item Nothing <> raw "Установить \"Готовность ВУ-2\" или \"Готовность ВУ-3\""
      item Nothing <> raw "Дождаться останова"
      item Nothing <> raw "Записать содержимое аккумулятора в момент останова программы"
      item Nothing <> raw "Продолжить выполнение программы и дождаться останова"
      item Nothing <> raw "Проверить равенство содержимого аккумулятора в момент останова программы значению, записанному до этого"
    vspace (Mm 4) <> parbreak <> textbf "Проверка работы обработчика ВУ-2" <> lnbk
    enumerate $ do
      item Nothing <> raw "Загрузить комплекс программ в память базовой ЭВМ."
      item Nothing <> raw "Изменить значение точки останова по адресу 10E на HLT"
      item Nothing <> raw "Запустить основную программу в автоматическом режиме с адреса 100"
      item Nothing <> raw "Установить \"Готовность ВУ-2\""
      item Nothing <> raw "Дождаться останова"
      item Nothing <> raw "Сравнить содержимое аккумулятора в момент останова программы с содержимым ячейки 006, содержащей X до операции логического умножения и проверки на соответствие ОДЗ"
    vspace (Mm 4) <> parbreak <> textbf "Проверка работы функции, выводимой на ВУ-3" <> lnbk
    enumerate $ do
      item Nothing <> raw "Загрузить комплекс программ в память базовой ЭВМ."
      item Nothing <> raw "Изменить значения точек останова по адресу 212 на HLT"
      item Nothing <> raw "Запустить основную программу в автоматическом режиме с адреса 100"
      item Nothing <> raw "Установить \"Готовность ВУ-3\""
      item Nothing <> raw "Дождаться останова"
      item Nothing <> raw "Сравнить содержимое аккумулятора в момент останова программы со значением функции, посчитанным вручную от значения ячейки 006, содержащей X"


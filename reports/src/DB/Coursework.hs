module DB.Coursework where

import ReportBase
import qualified Identity.Student as Student

import Text.LaTeX.Base.Syntax (TeXArg (..))
import Text.LaTeX.Packages.Graphicx (IGOption (..), includegraphics)

writeReport :: IO ()
writeReport = do
  schema <- readFile "../db/coursework-schema.sql"
  triggers <- readFile "../db/coursework-triggers.sql"
  seeds <- readFile "../db/coursework-data.sql"
  indexes <- readFile "../db/coursework-indexes.sql"
  renderFile "./renders/DB-Coursework.tex" (execLaTeXM $ reportTeX (schema, triggers, seeds, indexes))

reportTeX :: (String, String, String, String) -> LaTeXM ()
reportTeX (schemaSql, triggersSql, seedsSql, indexesSql) = do
  baseHeader
  usepackage [] "fancyvrb"
  usepackage [] "textcomp"
  usepackage [] "multicol"
  document $ do
    multipleAuthorsTitlePage ("КУРСОВАЯ РАБОТА. Часть IV", "Базы данных", Nothing, [Student.dbCourseworkGroupmate, Student.name], "2018 г.")
    includegraphics [IGWidth $ Cm 16.4] "../src/DB/Coursework-DDL.png" <> lnbk
    sectionstar "Описание сущностей"
    let b = textit
    let nextl = vspace (Mm 4) <> parbreak
    environment "flushleft" $ do
    environment "sloppypar" $ do
      textbf "people" <> ". Каждый экземпляр описывает человека, занимающего определенное положение в школе чародейства. " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "full_name" <> " { text, not null } -- полное имя, которое может состоять из одного и более слов, " <> b "birth_date" <> " { date, not null } -- дата рождения, " <> b "death_date" <> " { date } -- дата смерти для умерших (призраков, духов), " <> b "gender" <> " { gender, not null } -- пол, " <> b "personal_value" <> " { personal_value, not null } -- ценность, которой придерживается личность, и которая используется для распределения по факультетам, " <> b "bio" <> " { text } -- краткая биография. " <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "birth_death_date_order" <> " -- дата рождения должна быть ранее даты смерти." <> nextl
      textbf "houses" <> ". Факультеты школы. " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "name" <> " { text, not null } -- название факультета, " <> b "dean_id" <> " { bigint, not null } -- внешняя ссылка на декана (экземпляр people), " <> b "values" <> " { personal_value[], not null } -- ценности, которых придерживается факультет, используются при распределении." <> nextl
      textbf "books" <> ". Хранит в себе информацию о книгах в библиотеке. Содержит " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "title" <> " { text, not null } -- заголовок книги, " <> b "author" <> " { text, not null } -- имя автора, " <> b "added_on" <> " { date, not null } -- дату появления в библиотеке, " <> b "requires_permission" <> " { boolean, not null } -- требует ли получение книги специального разрешения." <> nextl
      textbf "book_lendings" <> ". Отражает циркуляцию книг в библиотеке. Состоит из " <> b "id" <> " { bigint, unique, not null } -- первичного ключа, " <> b "book_id" <> " { bigint, not null } -- внешней ссылки на книгу (экземпляр books), " <> b "lendee_id" <> " { bigint, not null } -- внешней ссылки на человека, получившего книгу (экземпляр people), " <> b "permitted_by_id" <> " { bigint } -- необязательной внешней ссылки на человека, выдавшего разрешение на получение книги (экземпляр people), " <> b "checked_out_on" <> " { timestamp, not null } -- даты выдачи, " <> b "checked_in_on" <> " { timestamp } -- даты возвращения в библиотеку." <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "validate_book_permission_on_checkout" <> " -- для получения книг с ограниченным доступом требуется разрешение, " <> lnbk <> b "validate_book_availability_on_checkout" <> " -- невозможно получить книгу, которая еще не была возвращена в библиотеку," <> lnbk <> b "checked_out_checked_in_date_order" <> " -- дата выдачи книги должна быть ранее даты возвращения." <> nextl
      textbf "creatures" <> ". Иллюстрирует магических существ мира. Содержит " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "generic_name" <> " { text, not null } -- название вида, " <> b "discovered_on" <> " { timestamp, not null } -- даты открытия и документирования, " <> b "mom_classification" <> " { creature_classification, not null } -- классификацию Министерства Магии." <> nextl
      textbf "creature_domestications" <> ". Хранит информацию о прирученных магических существах. Состоит из " <> b "id" <> " { bigint, unique, not null } -- первичного ключа, " <> "domesticated_by_id" <> " { bigint, not null } -- внешней ссылки на приручившего человека (экземпляр people), " <> b "creature_id" <> " { bigint, not null } -- внешней ссылки на прирученное животное (экземпляр creatures), " <> b "domesticated_on" <> " { timestamp, not null } -- даты приручения, " <> b "name_given" <> " { text, not null } -- данной животному клички." <> nextl
      textbf "creature_books" <> ". Реализует связь многие-ко-многим между существами и книгами, в которых они описаны. Состоит из " <> b "creature_id" <> " { bigint, not null } -- внешней ссылки на существо (экземляр creatures) и " <> b "book_id" <> " { bigint, not null } -- внешней ссылки на книгу (экземпляр books)." <> nextl
      textbf "spells" <> ". Информация о заклинаниях. Содержит " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "creator_id" <> " { bigint } -- необязательную внешнюю ссылку на создателя (экземпляр people), " <> b "counterspell_id" <> " { bigint } -- необязательную внешнюю ссылку на контр-заклинание (экземпляр spells), " <> b "name" <> " { text, not null } - название заклинания, " <> b "description" <> " { text, not null } -- описание эффекта, " <> b "type" <> " { spell_type, not null } -- тип заклинания, " <> b "is_forbidden" <> " { boolean, not null } -- является ли запрещенным." <> nextl
      textbf "spell_books" <> ". Реализует связь многие-ко-многим между заклинаниями и книгами, в которых они описаны. Состоит из " <> b "spell_id" <> " { bigint, not null } -- внешней ссылки на заклинание (экземляр spells) и " <> b "book_id" <> " { bigint, not null } -- внешней ссылки на книгу (экземпляр books)." <> nextl
      textbf "study_plans" <> ". Учебные планы, содержащие предметы, посещаемые студентом. Содержат " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "house_id" <> " { bigint, not null } -- внешнюю ссылку на факультет, к которому принадлежит план (экземпляр houses), " <> b "academic_year" <> " { integer, not null }" <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "academic_year_validity" <> " -- год обучения должен находиться в промежутке от 1 до 7." <> nextl
      textbf "student_clubs" <> ". Отражает студенческие клубы, участие в которых обязательно. Примеры -- литературный кружок, клуб легкой музыки. Содержит " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "president_id" <> " { bigint, not null } -- внешнюю ссылку на президента клуба (экземпляр student_profiles), " <> b "name" <> " { text, not null } -- название клуба, " <> b "category" <> " { club_categories, not null } -- общую категорию." <> nextl
      textbf "student_profiles" <> ". Связывает студентов с их учебной деятельностью. Содержит " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "person_id" <> " { bigint, not null } -- внешнюю ссылку на человека (экземпляр people), " <> b "study_plan_id" <> " { bigint } -- внешнюю ссылку на учебный план для аттестации (экземпляр study_plans), " <> b "club_id" <> " { bigint, not null } -- внешнюю ссылку на клуб, в котором состоит студент (экземпляр student_clubs), " <> b "graduation_essay_id" <> " { bigint } -- внешнюю ссылку на выпускное эссе (экземпляр books), " <> b "dormitory_room"  <> " { integer } -- номер комнаты в общежитии, которые полагаются всем студентам, но не другим работникам." <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "validate_house_student_values" <> " -- личные ценности студента должны совпадать с ценностями факультета." <> nextl
      textbf "subjects" <> ". Учебные предметы. Состоит из " <> b "id" <> " { bigint, unique, not null } -- первичного ключа, " <> b "teacher_id" <> " { bigint } -- внешней ссылки на преподавателя (экземпляр people), " <> b "study_plan_id" <> " { bigint } -- внешней ссылки на учебный план (экземпляр study_plans), определяющей принадлежность предмета, name { text, not null } -- названия предмета." <> nextl
      textbf "exam_results" <> ". Индивидуальные результаты аттестации каждого студента по предметам его учебного плана. Содержит " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "subject_id" <> " { bigint, not null } -- внешюю ссылку на предмет (экземпляр subjects), " <> b "student_profile_id" <> " { bigint, not null } -- внешнюю ссылку на аттестующегося студента (экземпляр student_profiles), " <> b "attended_on" <> " { timestamp, not null } -- дату посещения экзамена, mark { exam_mark, not null } -- оценку." <> nextl
      textbf "classroom_bookings" <> ". Хранит информацию о занятости аудиторий по дням недели предметами и клубами. Включает " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "subject_id" <> " { bigint } -- внешнюю ссылку на предмет, занимающий аудиторию (экземпляр subjects), student_club_id { bigint } -- внешнюю ссылку на клуб, занимающий аудиторию (экземпляр student_clubs), room_number { integer, not null } -- номер аудитории, week_day { week_day, not_null } -- день недели, в который занята уадитория, occupied_from { time, not null } и occupied_to { time, not null } -- время начала и конца занятости аудитории." <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "booked_by_single_entity" <> " -- аудитория может быть занята или предметом, или клубом, но не тем и другим или ни тем, ни другим, " <> lnbk <> b "validate_classroom_availability" <> " -- аудитория должна быть свобода в указанный день недели и промежуток времени." <> nextl
      textbf "events" <> ". События, происходящие во время учебного процесса. Определяются " <> b "id" <> " { bigint, unique, not null } -- первичным ключом, " <> b "name" <> " { text } -- названием, " <> b "stared_on" <> " { timestamp } -- временем начала, " <> b "ends_on" <> " { timestamp } -- временем конца." <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "start_end_date_order" <> " -- дата начала события должна быть раньше даты завершения, " <> lnbk <> b "validate_event_participation_date_belonging_to_event_timespan" <> " -- время участия в событии дожно входить во время его прохождения." <> nextl
      textbf "event_participations" <> ". Связывает студентов и события, в которых они участвовали. Используется для подсчета очков факультетов и составления личной характеристики студента. Состоит из " <> b "id" <> " { bigint, unique, not null } -- первичного ключа, " <> b "student_profile_id" <> " { bigint, not null } -- внешней ссылки на студента (экземпляр student_profiles), " <> b "event_id" <> " { bigint,  not null } -- внешней ссылки на событие (экземпляр events), " <> b "is_positive" <> " { boolean, not null } -- положителен или отрицателен характер участия, " <> "score" <> " { integer, not null } -- количество очков, добавленных или снятых с факультета, " <> b "date" <> " { timestamp, not null } -- даты конкретного участия в событии." <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "positive_score" <> " -- количество очков должно быть указано по модулю." <> nextl
      textbf "delivery_owls" <> ". Описывает общедоступных почтовых сов. Определяется " <> b "id" <> " { bigint, unique, not null } -- первичным ключом, " <> b "house_id" <> " { bigint, not null } -- внешней ссылкой, показывающей принадлежность совы факультету (экземпляр house), " <> b "name" <> " { text, not null } -- именем совы, " <> b "age" <> " { integer, not null } -- возрастом, коррелирующем с количеством ремонтных работ." <> nextl
      textbf "delivery_owl_flights" <> ". Трекинг перемещения сов, переносящих груз. Содержит " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "owl_id" <> " { bigint, not null } -- внешнюю ссылку на сову, совершающую полет (экземпляр delivery_owls), " <> b "sender_id" <> " { bigint, not null } -- внешнюю ссылку на отправителя груза или письма (экземпляр people), " <> b "dest_coordinates" <> " { coordinates, not null } -- координаты назначения, " <> b "contents_type" <> " { delivery_content, not null } -- тип переносимого груза (письмо первого класса, письмо второго класса, бандероль, периодическое издание), " <> b "departed_on" <> " { timestamp, not null } -- дата отправления, " <> b "returned_on" <> " { timestamp } -- необязательная дата возвращения." <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "departure_return_date_order" <> " -- дата отправки совы должна быть раньше даты ее возвращения, " <> lnbk <> b "validate_owl_availability" <> " -- выбранная сова не должна находится в полете или стоять на ремонте, " <> lnbk <> b "validate_delivery_owl_sender_house_match" <> " -- выбранная сова должна принадлежать факультету, на котором обучается отправитель." <> nextl
      textbf "delivery_owl_repair_jobs" <> ". Отслеживает ремонтные работы, проводимые над переносящими груз совами. Состоит из " <> b "id" <> " { bigint, unique, not null } -- первичный ключ, " <> b "owl_id" <> " { bigint, not null } -- внешней ссылки на сову (экземпляр delivery_owls), " <> b "tech_ops_manager_id" <> " { bigint, not null } -- внешней ссылки на менеджера технических операций, ответственного за проводимые работы (экземпляр people), " <> b "cause" <> " { text, not null } -- причина постановки на ремонт, " <> b "began_on" <> " { timestamp, not null } -- дата начала проведения работ, " <> b "finished_on" <> " { timestamp } -- необязательная дата окончания работ." <> parbreak
      vspace (Mm 1) <> textit "Ограничения целостности: " <> lnbk <> b "beginning_finish_date_order" <> " -- дата постановки на ремонт должна быть раньше даты окончания работ." <> nextl
    sectionstar "Реализация даталогической модели"
    raw "\\begin{multicols}{2}"
    environment2 "Verbatim" [OptArg $ raw "fontsize=\\scriptsize"] $ raw . fromString $ "\n" ++ schemaSql ++ "\n"
    raw "\n"
    raw "\\end{multicols}"
    sectionstar "Реализация триггер-функций"
    environment2 "Verbatim" [OptArg $ raw "fontsize=\\scriptsize"] $ raw . fromString $ "\n" ++ triggersSql ++ "\n"
    raw "\n"
    sectionstar "Реализация индексов"
    environment2 "Verbatim" [OptArg $ raw "fontsize=\\scriptsize"] $ raw . fromString $ "\n" ++ indexesSql ++ "\n"
    raw "\n"

\begin{lstlisting}
ORG 000
I_RET: WORD 0000         ; адрес возврата из прерывания
I_HANDLER_START:
  NOP                    ; точка останова в начале прерывания
  BR I_HANDLER
I_SAVED_A: WORD 0000     ; сохраненный A
I_SAVED_C: WORD 0000     ; сохраненный C

ORG 006
X: WORD 0000
MAX_X: WORD 0016         ; число 21 в восьмиб. представлении
MIN_X_TO_ZERO: WORD FF14 ; число, которое при сложении с восьмиб.
                         ; числом -20 дает 0000
MAGIC_DEC: WORD 00FD     ; число -3 в восьмиб. представлении

ORG 100
BEGIN:
  EI
MAIN_LOOP:               ; === главный цикл
  CLA
  ADD X
  ADD MAGIC_DEC          ; сложение X с магической константой (-3)
  JSR CHECK_X            ; проверка на ОДЗ
  MOV X
  BR MAIN_LOOP

HANDLE_DEV2: WORD 0000   ; === обработка второго устройства
  CLA
  IN 2
  CLF 2
  NOP                    ; точка останова после ввода логических значений
  AND X                  ; логическое умножение
  JSR CHECK_X            ; проверка на ОДЗ
  NOP                    ; точка останова после проверки на ОДЗ
  MOV X
  BR (HANDLE_DEV2)
HANDLE_DEV3: WORD 0000   ; === обработка третьего устройства
  JSR CALC_FUN           ; вычисление функции с сохранением значения
                         ; в аккумуляторе
  OUT 3
  CLF 3
  BR (HANDLE_DEV3)

CHECK_X: WORD 0000       ; === проверка ОДЗ
  AND 8BIT_MASK          ; обнуление старших бит, которые могут быть = 1
                         ; в результате переноса в арифметических операциях
  ADD MIN_X_TO_ZERO      ; сложение восьмиб. числа с константой,
                         ; которое приведет к нулевому значению, если X выходит
                         ; за минимальную границу ОДЗ
  BMI RESET_X
  SUB MIN_X_TO_ZERO      ; восстановление числа
  SUB MAX_X              ; вычитание максимальной границы ОДЗ,
                         ; которое приведет к нулевому значению
  BMI RESET_X
  ADD MAX_X              ; восстановление числа
  BR (CHECK_X)
  RESET_X:
    CLA
    ADD MAX_X            ; установка X в максимальную границу ОДЗ
  BR (CHECK_X)
  8BIT_MASK: WORD 00FF

CALC_FUN: WORD 0000      ; === вычисление F(X) = 6X - 3
  CLA
  ADD X
  ROL                    ; умножение на 2 - A = X * 2
  ADD X                  ; прибавление X - A = X * 3
  ROL                    ; умножение на 2 - A = X * 6
  ADD MAGIC_DEC          ; вычитание 3
  NOP                    ; точка останова с результатом функции
  BR (CALC_FUN)

ORG 200
I_HANDLER:               ; === обработчик прерываний
  I_SAVE_REGISTERS:
    MOV I_SAVED_A        ; сохранение А
    ROL
    MOV I_SAVED_C        ; сохранение С
  
  I_CHECK_DEV1:          ; проверка первого устройства
  CLF 1                  ; ВУ1 не используется

  I_CHECK_DEV2:          ; проверка второго устройства
    TSF 2           
    BR I_CHECK_DEV3      ; пропуск обработчика, если устройство не готово
  JSR HANDLE_DEV2        ; передача управления обработчику прерывания,
                         ; который отвечает за сброс флага

  I_CHECK_DEV3:          ; проверка третьего устройства
    TSF 3
    BR I_FINISH          ; пропуск обработчика, если устройство не готово
  JSR HANDLE_DEV3        ; передача управления обработчику прерывания,
                         ; который отвечает за сброс флага

  I_FINISH:              ; конец обработчика прерываний,
  I_RESTORE_REGISTERS:   ; восстановление регистров
    CLA                  ; восстановление C
    ADD I_SAVED_C
    ROR
    CLA                  ; восстановление A:
    CMA                  ; так как ADD обнуляет carry, используется
    AND I_SAVED_A        ; логическое умножение сохраненного А с FFFF
  NOP                    ; конец обработки прерываний
  EI
  BR (I_RET)
\end{lstlisting}

module CS.Lab3 where

import ReportBase

import Text.LaTeX.Packages.AMSMath
import Text.LaTeX.Packages.Graphicx

writeReport :: IO ()
writeReport = renderFile "./renders/CS-Lab3.tex" (execLaTeXM reportTeX)

reportTeX :: LaTeXM ()
reportTeX = do
  baseHeader
  document $ do
    baseTitlePage ("ЛАБОРАТОРНАЯ РАБОТА №3", "Основы вычислительной техники", Just "Вариант 987", "2017 г.")
    sectionstar "Цель работы"
    "Изучение способов организации циклических программ и исследование порядка функционирования БЭВМ при выполнении циклических программ."
    sectionstar "Порядок выполнения работы"
    "Восстановить текст заданного варианта программы, определить предназначение и составить описание программы, определить область представления и область допустимых значений исходных данных и результата, выполнить трассировку программы."
    sectionstar "Содержание памяти"
    includegraphics [IGWidth (Cm 6)] "../src/CS/Lab3Code.png"
    sectionstar "Исходный текст программы"
    tabular Nothing [VerticalLine, LeftColumn, VerticalLine, LeftColumn, VerticalLine, LeftColumn, VerticalLine, ParColumnTop "10cm", VerticalLine] $ do
      hline
      trow [textbf "Адрес", textbf "Код", textbf "Мнемоника", textbf "Комментарии"]
      trow ["4D6", "04EA", "A", "Адрес первого элемента массива"]
      trow ["4D7", "0005", "N", "Число элементов в массиве"]
      trow ["4D8", "F300", "R", "Ячейка для накопления результата"]
      tfreerow [textbf "4D9 +", textbf "F200", textbf "CLA", multirow 2 Nothing $ textbf "Начало программы. " <> "Обнулить R"] >> cline 1 3
      trow ["4DA", "34D8", "MOV 4D8", ""]
      tfreerow ["4DB", "44D7", "ADD 4D7", multirow 4 (Just $ Cm 10) "В индексную ячейку 00С записать отрицательное значение числа элементов в массиве (изначательное значение счетчика итераций)"] >> cline 1 3
      tfreerow ["4DC", "F400", "CMA", ""] >> cline 1 3
      tfreerow ["4DD", "F800", "INC", ""] >> cline 1 3
      trow ["4DE", "300C", "MOV 00C", ""]
      tfreerow ["4DF", "F200", "CLA", multirow 3 (Just $ Cm 10) "В индексную ячейку 00D записать адрес первого элемента массива"] >> cline 1 3
      tfreerow ["4E0", "44D6", "ADD 4D6", ""] >> cline 1 3
      trow ["4E1", "300D", "MOV 00D", ""]
      tfreerow ["4E2", "F200", "CLA", multirow 2 (Just $ Cm 10) $ textbf "Начало цикла. " <> "A присвоить следующий, начиная с первого, элемент массива"] >> cline 1 3
      trow ["4E3", "480D", "ADD (00D)", ""]
      trow ["4E4", "B4E7", "BEQ 4E7", "Пропустить следующие две операции, если элемент массива равен нулю"]
      trow ["4E5", "64D8", "SUB 4D8", "Отнять R от элемента массива"]
      trow ["4E6", "34D8", "MOV 4D8", "Записать результат обратно в R"]
      tfreerow ["4E7", "000C", "ISZ 00C", multirow 2 (Just $ Cm 10) "Прибавить 1 к счетчику итераций и перейти в начало цикла, если его значение меньше нуля"] >> cline 1 3
      trow ["4E8", "C4E2", "BR 4E2", ""]
      trow [textbf "4E9 -", textbf "F000", textbf "HLT", textbf "Конец программы." <> " Остановить ЭВМ"]
      tfreerow ["4EA", "F400", math $ raw "A_1", multirow 5 (Just $ Cm 10) "Значения элементов массива"] >> cline 1 3
      tfreerow ["4EB", "0000", math $ raw "A_2", ""] >> cline 1 3
      tfreerow ["4EC", "54DC", math $ raw "A_3", ""] >> cline 1 3
      tfreerow ["4ED", "F800", math $ raw "A_4", ""] >> cline 1 3
      trow ["4EE", "54E6", math $ raw "A_5", ""]
    sectionstar "Описание программы"
    raw "\\noindent\n" >> "Программа вычисляет значение " <> math "R" <> ", которое определяется следующим образом: "
    flalignstar $ do
      raw "&R = F_{N'}" >> lnbk
      raw "&F_i = A'_i - F_{i-1}" >> lnbk
      raw "&F_1 = A'_1"
    "(где " <> math "N'" <> " -- число " <> textit "ненулевых" <> " элементов в массиве, " <> math (raw "A'_i") <> " -- " <> math "i" <> "-й элемент массива " <> textit "ненулевых" <> " элементов, " <> math "i" <> " изменяется от 1 до " <> math "N'" <> ")" >> parbreak >> vspace (Mm 4)
    "Формула сводится к нахождению разности между элементами массива с четными и нечетными индексами, если число " <> textit "неотрицательных" <> " элементов четно, и в противном случае наоборот. Таким образом, ее можно сократить до следующей формы:"
    mathDisplay $ do
      raw "(-1)^{(N' mod 2)} \\sum_{n=1}^{\\lfloor \\frac{N'}{2} \\rfloor} A'_{2n} - \\sum_{n=1}^{\\lceil \\frac{N'}{2} \\rceil} A'_{2n-1}"
    "Результат и элементы массива представлены знаковыми числами. Область допустимых значений каждого следующего элемента зависит от предыдущих и может быть в общем виде выражена как: "
    mathDisplay $ cases $ do
      raw "-2^{15} \\leqslant A'_i - (A'_{i -1} - (A'_{i - 2} \\dotsc)) \\leqslant 2^{15}-1, & 3 \\leqslant i \\leqslant N'" >> lnbk
      raw "-2^{15} \\leqslant A'_2 - A'_1 \\leqslant 2^{15} - 1, & i = 2" >> lnbk
      raw "-2^{15} \\leqslant A'_1 \\leqslant 2^{15} - 1, & i = 1"
    "Стоит отметить, что cуществует такая область значений отдельного элемента, что ошибка переполнения в результате выполнения программы не возникнет независимо от значений других элементов:"
    mathDisplay $ raw "-2^{15 - \\lceil \\frac{N'}{2} \\rceil} \\leqslant A'i \\leqslant 2^{15 - \\lceil \\frac{N'}{2} \\rceil} - 1"
    "В случае, когда число ненулевых элементов равно 1, применимо общее выражение ОДЗ для знаковых чисел, " <> math (raw "-2^{15} \\leqslant A'_1 \\leqslant 2^{15} - 1") <> "." >> parbreak >> vspace (Mm 4)
    "Можно заметить, что при " <> math (raw "N' \\geqslant 29") <> " подобная область отсутствует; допустимое значение отдельного элемента зависит от предшествующих ему, см. выше." >> parbreak >> vspace (Mm 4)
    "Область допустимых значений адреса первого элемента массива и числа элементов массива зависят от возможного размещения исходных данных; об этом см. ниже."
    sectionstar "Размещение исходных данных в памяти"
    "Адреса 4D6-4D8 содержат адрес первого элемента массива, число элементов в массиве и результат соответственно." >> parbreak
    "Адреса 4D9-4E9 содержат исполняемые команды, т.е. саму программу." >> parbreak >> vspace (Mm 4)
    "На расположение исходных данных в памяти существует несколько ограничений: количество доступных ячеек в БЭВМ, невозможность использовать зарезервированные программой адреса (см. выше), а также необходимость распологать элементы друг за другом непрерывно." >> lnbk
    "Таким образом, возможно три варианта размещения исходного массива: 000-00C (до 13 элементов), 00E-4D5 (до 1224 элементов), 4EA-0FF (до 790 элементов)."
